Първо проверявам дали аргументите са 4 - ако не са, exit 1
След това дали първият аргумент е .zip - ако не е, exit 2
Ако вече съществуват 2рия, 3тия и 4тия аргументи - съответно exit 3, exit 4, exit 5.
Дотук валидирам входа и продължавам със задачата.
Създавам временна директория TEMP, в която разархивирам .zip файла (1вия аргумент)
В променливата FNs си запазвам списък с валидните факултетни номера, които по условие взимаме от имената на папките в .zip архива, които вече се намират в TEMP директорията.
Създавам двете директории (2рия и 3тия аргименти) и файла за резултати (4тия аргумент)
И започвам в един много сложен for цикъл да обхождам един по един факултетните номера и съответните им папки в TEMP, като също така успоредно с проверките попълвам файла за резултати (4тия аргумент)
Първо записам факултетиния номер, който ще разглеждам, във файла с резултати с echo -n, тъй като искам да остана и да записвам флаговете на същия ред.
Във променлива FOLDER запазвам папката на този факулетен номер, а в NUMFILES - колко файла има в тази папка (т.е. колко файла са предадени в Мудъл)
Следва проверка дали са предадени повече от 1 или по-малко от 1 файла и ако е така - всичко, което е предал се премества в папка с име фак.номер в папката DFAILED (3тия аргумент) и се изтрива редът на тази факултетен номер от файла с резултати (FRESULT)
При положение, че има само един файл предаден, той се запазва в променлива ARCH
Следва проверка за вярно име и записване на съответния флаг в FRESULT
После чрез променливата FOLDER проверявам формата на файла и дали е архив чрез командата file.
Ако формата на архива е от изброените в условието за грешни, записвам съответния флаг в FRESULT. Спрямо формата следват няколко if-а, в които се случват аналогични неща:
	1. В променлива DIRS запазвам директориите в архива без да го разархивирам чрез tar -t/zip -sf/rar lb и съответните аргументи спрямо формата на архива.
	2. В променлива NUMDIRS запазвам броя на директориите.
	3. Създавам директория в DOK (2рия аргумент) с име факултетния номер.
	4. В тази новосъздадена директория разархивирам архива.
	5. Ако възникне грешка при разархивирането премествм архива в папка с име факултетния номер в DFAILED, изтрива се папката с име фак. номер в DOK и се изтрива редът на този фак.номер от FRESULT.
След като вече архивът е разархивиран (ако не може да бъде сме преминали на следващия и така докато не намерим такъв, които успено е разархивиран), се записват съответните флагове в FRESULT относно това, дали в архива има директория и дали тя е с правилно име (фак. номер на студента)
Ако форматът на архива е с правилен формат(т.е. XZ), то се случва същото като тези с изброените грешни формати, но вече в FRESULT флагът за формат на архива е 0.
Ако форматът на архива е различен от изброените за грешни, не е XZ, или изобщо не е архив, той се премества в папка с име фак.номер в DFAILED и се изтрива реда на този фак.номер от FRESULT.
Накрая след като са обходени всички фак.номера се изтрива временната директоя TEMP, в която в началото на програмата бе разархивиран .zip архива (1вия аргумент).

Заключение:
Честно казано ми отне супер много време (около 15 часа, ако не и повече).Моето решение не разпакетира решенията в удобна форма за проверявне (в папките се намира цялото съдържание на архивите на студентите, заедно с директориите, ако има такива). Не можах да разбера как трябва да стане това.Не съм решила всички задачи от сборника, но определено съм решавала и въпреки това тази задача ме затрудни твърде много. Със сигурност има много по-лесен и прост начин, който става на по-малко от 150 реда, и ще е много полезно, ако качите такова решение след изтичане на срока на домашното.

Използвани източници освен man страниците:
linustechtips.com/topic/739372-bash-script-echo-on-same-line
www.cyberciti.biz/faq/list-the-contents-of-a-tar-or-targz-file/
